var T = (e, t, i) => {
  if (!t.has(e))
    throw TypeError("Cannot " + i);
};
var s = (e, t, i) => (T(e, t, "read from private field"), i ? i.call(e) : t.get(e)), h = (e, t, i) => {
  if (t.has(e))
    throw TypeError("Cannot add the same private member more than once");
  t instanceof WeakSet ? t.add(e) : t.set(e, i);
}, n = (e, t, i, o) => (T(e, t, "write to private field"), o ? o.call(e, i) : t.set(e, i), i), D = (e, t, i, o) => ({
  set _(a) {
    n(e, t, a, i);
  },
  get _() {
    return s(e, t, o);
  }
}), u = (e, t, i) => (T(e, t, "access private method"), i);
import { DrawBoard as k } from "@moefy-canvas/core";
export * from "@moefy-canvas/core";
import { Random as x, EventsHandler as G, showBadge as J, isMobile as K, isTouchEvent as E } from "@moefy-canvas/utils";
import { debounce as L } from "ts-debounce";
var M, b, P;
class H {
  constructor(t, i, o, a, l) {
    h(this, M, void 0);
    h(this, b, void 0);
    h(this, P, void 0);
    this.size = o, this.color = a, n(this, P, 0), n(this, M, l), n(this, b, i), this.position = { ...t };
  }
  move() {
    this.position.x = Math.sin(s(this, M)) * s(this, b) + this.position.x, this.position.y = Math.cos(s(this, M)) * s(this, b) + this.position.y + s(this, P) * 0.3, D(this, P)._++;
  }
  shouleRemove(t) {
    return this.position.x < 0 || this.position.x > t.width || this.position.y > t.height;
  }
}
M = new WeakMap(), b = new WeakMap(), P = new WeakMap();
class N extends H {
  draw(t, i) {
    t.fillStyle = this.color, t.beginPath(), t.arc(this.position.x, this.position.y, this.size, 0, Math.PI * 2), t.fill();
  }
}
var f;
class Q extends H {
  constructor(i, o, a, l, r) {
    super(i, o, a, l, r);
    h(this, f, 0);
  }
  draw(i, o) {
    i.fillStyle = this.color, i.beginPath();
    const a = this.size * 2, l = this.size;
    for (let r = 0; r < 5; r++)
      i.lineTo(
        Math.cos((18 + 72 * r - s(this, f)) / 180 * Math.PI) * a + this.position.x,
        -Math.sin((18 + 72 * r - s(this, f)) / 180 * Math.PI) * a + this.position.y
      ), i.lineTo(
        Math.cos((54 + 72 * r - s(this, f)) / 180 * Math.PI) * l + this.position.x,
        -Math.sin((54 + 72 * r - s(this, f)) / 180 * Math.PI) * l + this.position.y
      );
    i.fill(), n(this, f, s(this, f) + 5);
  }
}
f = new WeakMap();
class q {
  static create(t, i, o, a, l, r) {
    const j = this.shapeMap.get(t);
    return new j(i, o, a, l, r);
  }
}
q.shapeMap = /* @__PURE__ */ new Map([
  ["star", Q],
  ["circle", N]
]);
var d;
class U {
  constructor(t, i, o, a) {
    h(this, d, void 0);
    this.stopped = !1, n(this, d, /* @__PURE__ */ new Set());
    for (let l = 0; l < a; l++) {
      const r = q.create(
        t,
        i,
        x.randomFloat(1, 6),
        o,
        x.color("89ABCDEF"),
        x.randomFloat(Math.PI - 1, Math.PI + 1)
      );
      s(this, d).add(r);
    }
  }
  move(t) {
    for (const i of s(this, d)) {
      if (i.shouleRemove(t)) {
        s(this, d).delete(i);
        continue;
      }
      i.move();
    }
    s(this, d).size === 0 && (this.stopped = !0);
  }
  draw(t, i) {
    for (const o of s(this, d))
      o.draw(t, i);
  }
}
d = new WeakMap();
var Z = /* @__PURE__ */ ((e) => (e.Star = "star", e.Circle = "circle", e))(Z || {}), y, z, g, p, m, w, v, c, F, X, I, Y, C, B, S, O, A, V, R, W;
class et {
  constructor({ shape: t = "star", size: i = 2, numParticles: o = 10 } = {}, a = {}) {
    h(this, F);
    h(this, I);
    h(this, C);
    h(this, S);
    h(this, A);
    h(this, R);
    h(this, y, void 0);
    h(this, z, void 0);
    h(this, g, void 0);
    h(this, p, null);
    h(this, m, /* @__PURE__ */ new Set());
    h(this, w, !1);
    h(this, v, void 0);
    h(this, c, new G());
    n(this, y, t), n(this, z, i), n(this, g, o), n(this, v, a), this.animate = this.animate.bind(this);
  }
  mount(t) {
    n(this, p, new k(
      t,
      window.innerWidth,
      window.innerHeight,
      !0,
      !0,
      s(this, v)
    )), u(this, F, X).call(this), J("Theme Popper \u{1F389}", { leftBgColor: "#ffb366" });
  }
  unmount() {
    u(this, I, Y).call(this), n(this, w, !1);
  }
  animate() {
    if (n(this, w, !0), s(this, m).size === 0) {
      n(this, w, !1), s(this, p).clear();
      return;
    }
    requestAnimationFrame(this.animate);
    for (const t of s(this, m)) {
      if (t.stopped) {
        s(this, m).delete(t);
        return;
      }
      t.move(s(this, p).size);
    }
    s(this, p).draw((t, i) => {
      for (const o of s(this, m))
        o.draw(t, i);
    }), s(this, p).render();
  }
}
y = new WeakMap(), z = new WeakMap(), g = new WeakMap(), p = new WeakMap(), m = new WeakMap(), w = new WeakMap(), v = new WeakMap(), c = new WeakMap(), F = new WeakSet(), X = function() {
  K() ? s(this, c).add("touchstart", u(this, C, B).bind(this)) : s(this, c).add("mousedown", u(this, C, B).bind(this)), s(this, c).add("visibilitychange", u(this, A, V).bind(this)), s(this, c).add("resize", L(u(this, S, O).bind(this), 500)), s(this, c).startAll();
}, I = new WeakSet(), Y = function() {
  s(this, c).stopAll(), s(this, c).clear();
}, C = new WeakSet(), B = function(t) {
  const i = {
    x: E(t) ? t.touches[0].clientX : t.clientX,
    y: E(t) ? t.touches[0].clientY : t.clientY
  }, o = new U(s(this, y), { ...i }, s(this, z), s(this, g));
  s(this, m).add(o), s(this, w) || u(this, R, W).call(this);
}, S = new WeakSet(), O = function(t) {
  s(this, p).handleResize(t);
}, A = new WeakSet(), V = function(t) {
  s(this, m).clear(), n(this, w, !1);
}, R = new WeakSet(), W = function() {
  requestAnimationFrame(this.animate);
};
export {
  et as Popper,
  Z as PopperShape
};
