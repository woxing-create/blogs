var f = (o, t, e) => {
  if (!t.has(o))
    throw TypeError("Cannot " + e);
};
var r = (o, t, e) => (f(o, t, "read from private field"), e ? e.call(o) : t.get(o)), h = (o, t, e) => {
  if (t.has(o))
    throw TypeError("Cannot add the same private member more than once");
  t instanceof WeakSet ? t.add(o) : t.set(o, e);
}, d = (o, t, e, n) => (f(o, t, "write to private field"), n ? n.call(o, e) : t.set(o, e), e);
const p = (o) => typeof o == "string";
var s;
class M {
  constructor() {
    h(this, s, void 0);
    d(this, s, /* @__PURE__ */ new Map());
  }
  add(t, e, n = window) {
    r(this, s).has(n) || r(this, s).set(n, /* @__PURE__ */ new Map());
    const c = r(this, s).get(n);
    c.has(t) || c.set(t, /* @__PURE__ */ new Set()), c.get(t).add(e);
  }
  startAll() {
    for (const [t, e] of r(this, s))
      for (const [n, c] of e)
        for (const a of c)
          t.addEventListener(n, a);
  }
  stopAll() {
    for (const [t, e] of r(this, s))
      for (const [n, c] of e)
        for (const a of c)
          t.removeEventListener(n, a);
  }
  clear() {
    r(this, s).clear();
  }
}
s = new WeakMap();
function g() {
  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}
function w(o) {
  return !!o.touches;
}
class i {
  static randomFloat(t, e) {
    return Math.random() * (e - t) + t;
  }
  static randomInt(t, e) {
    return Math.floor(i.randomFloat(t, e));
  }
  static choice(t) {
    const e = t.length, n = Math.floor(e * Math.random());
    return t[n];
  }
  static color(t = "0123456789ABCDEF") {
    return "#" + i.choice(t) + i.choice(t) + i.choice(t) + i.choice(t) + i.choice(t) + i.choice(t);
  }
}
function v(o, {
  leftColor: t = "#fff",
  rightColor: e = "#444",
  leftBgColor: n = "#35495e",
  rightBgColor: c = "#00ffc0"
} = {}) {
  console.log(
    `%c ${o} %c v0.5.2 112fa81 %c`,
    `background: ${n}; padding: 2px; color: ${t}; font-weight: bold; text-transform: uppercase;`,
    `background: ${c}; padding: 2px; color: ${e}; font-weight: bold; text-transform: uppercase;`,
    "background: transparent"
  );
}
function l() {
  return window.matchMedia("(prefers-color-scheme: dark)");
}
function b() {
  return !!l().matches;
}
export {
  M as EventsHandler,
  i as Random,
  l as getColorSchemeMediaList,
  b as isDarkMode,
  g as isMobile,
  p as isString,
  w as isTouchEvent,
  v as showBadge
};
