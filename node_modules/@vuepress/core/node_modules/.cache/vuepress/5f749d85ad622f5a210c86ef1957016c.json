{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\@vuepress-reco\\vuepress-plugin-bgm-player\\bin\\BgMusic.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\@vuepress-reco\\vuepress-plugin-bgm-player\\bin\\BgMusic.vue","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}