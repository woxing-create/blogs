{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\vuepress-theme-reco\\components\\SidebarLinks.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\vuepress-theme-reco\\components\\SidebarLinks.vue","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\Desktop\\blogs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCByZWYsIHRvUmVmcywgb25VcGRhdGVkLCBvbk1vdW50ZWQgfSBmcm9tICd2dWUnOwppbXBvcnQgU2lkZWJhckdyb3VwIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL1NpZGViYXJHcm91cCc7CmltcG9ydCBTaWRlYmFyTGluayBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9TaWRlYmFyTGluayc7CmltcG9ydCB7IGlzQWN0aXZlIH0gZnJvbSAnQHRoZW1lL2hlbHBlcnMvdXRpbHMnOwppbXBvcnQgeyB1c2VJbnN0YW5jZSB9IGZyb20gJ0B0aGVtZS9oZWxwZXJzL2NvbXBvc2FibGUnOwpleHBvcnQgZGVmYXVsdCBkZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdTaWRlYmFyTGlua3MnLAogIGNvbXBvbmVudHM6IHsKICAgIFNpZGViYXJHcm91cCwKICAgIFNpZGViYXJMaW5rCiAgfSwKICBwcm9wczogWydpdGVtcycsICdkZXB0aCcsCiAgLy8gZGVwdGggb2YgY3VycmVudCBzaWRlYmFyIGxpbmtzCiAgJ3NpZGViYXJEZXB0aCcgLy8gZGVwdGggb2YgaGVhZGVycyB0byBiZSBleHRyYWN0ZWQKICBdLAoKICBzZXR1cChwcm9wcywgY3R4KSB7CiAgICBjb25zdCBpbnN0YW5jZSA9IHVzZUluc3RhbmNlKCk7CiAgICBjb25zdCB7CiAgICAgIGl0ZW1zCiAgICB9ID0gdG9SZWZzKHByb3BzKTsKICAgIGNvbnN0IG9wZW5Hcm91cEluZGV4ID0gcmVmKDApOwogICAgY29uc3QgcmVmcmVzaEluZGV4ID0gKCkgPT4gewogICAgICBjb25zdCBpbmRleCA9IHJlc29sdmVPcGVuR3JvdXBJbmRleChpbnN0YW5jZS4kcm91dGUsIGl0ZW1zLnZhbHVlKTsKICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICBvcGVuR3JvdXBJbmRleC52YWx1ZSA9IGluZGV4OwogICAgICB9CiAgICB9OwogICAgY29uc3QgYWN0aXZhdGlvbkFuY2hvciA9ICgpID0+IHsKICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgIGNvbnN0IGFuY2hvcnMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoQUhMX0hFQURFUl9BTkNIT1JfU0VMRUNUT1IpKS5maWx0ZXIoYW5jaG9yID0+IGRlY29kZVVSSUNvbXBvbmVudChpbnN0YW5jZS4kcm91dGUuZnVsbFBhdGgpLmluZGV4T2YoZGVjb2RlVVJJQ29tcG9uZW50KGFuY2hvci5oYXNoKSkgIT0gLTEpOwogICAgICBpZiAoYW5jaG9ycyA9PSBudWxsIHx8IGFuY2hvcnMubGVuZ3RoIDwgMSB8fCBhbmNob3JzWzBdLm9mZnNldFRvcCA9PSB1bmRlZmluZWQpIHJldHVybjsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGFuY2hvcnNbMF0ub2Zmc2V0VG9wICsgMTYwKTsKICAgICAgfSwgMTAwKTsKICAgIH07CiAgICBjb25zdCBhY3RpdmF0aW9uTGluayA9ICgpID0+IHsKICAgICAgY29uc3Qgc3VidGl0bGVOYW1lID0gZGVjb2RlVVJJQ29tcG9uZW50KGluc3RhbmNlLiRyb3V0ZS5mdWxsUGF0aCk7CiAgICAgIGlmICghc3VidGl0bGVOYW1lIHx8IHN1YnRpdGxlTmFtZSA9PSAnJykgcmV0dXJuOwogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgY29uc3Qgc3VidGl0bGVzID0gW10uc2xpY2UuY2FsbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEFITF9TSURFQkFSX0xJTktfU0VMRUNUT1IpKTsKICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdWJ0aXRsZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICBpZiAoZGVjb2RlVVJJQ29tcG9uZW50KHN1YnRpdGxlc1tpXS5nZXRBdHRyaWJ1dGUoJ2hyZWYnKSkuaW5kZXhPZihzdWJ0aXRsZU5hbWUpICE9IC0xKSB7CiAgICAgICAgICBzdWJ0aXRsZXNbaV0uY2xpY2soKTsKICAgICAgICAgIGFjdGl2YXRpb25BbmNob3IoKTsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgICBjb25zdCBpc0luVmlld1BvcnRPZk9uZSA9ICgpID0+IHsKICAgICAgY29uc3Qgc2lkZWJhclNjcm9sbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3NpZGViYXInKVswXTsKICAgICAgbGV0IGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYWN0aXZlIHNpZGViYXItbGluaycpWzFdOwogICAgICBpZiAoZWwgPT0gbnVsbCB8fCBlbCA9PSB1bmRlZmluZWQgfHwgZWwub2Zmc2V0VG9wID09IHVuZGVmaW5lZCkgewogICAgICAgIGVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnYWN0aXZlIHNpZGViYXItbGluaycpWzBdOwogICAgICB9CiAgICAgIGlmIChlbCA9PSBudWxsIHx8IGVsID09IHVuZGVmaW5lZCB8fCBlbC5vZmZzZXRUb3AgPT0gdW5kZWZpbmVkKSByZXR1cm47CiAgICAgIGNvbnN0IHZpZXdQb3J0SGVpZ2h0ID0gc2lkZWJhclNjcm9sbC5jbGllbnRIZWlnaHQgfHwgd2luZG93LmlubmVySGVpZ2h0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQgfHwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7CiAgICAgIGNvbnN0IG9mZnNldFRvcCA9IGVsLm9mZnNldFRvcDsKICAgICAgY29uc3Qgb2Zmc2V0Qm90dG9tID0gZWwub2Zmc2V0VG9wICsgZWwub2Zmc2V0SGVpZ2h0OwogICAgICBjb25zdCBzY3JvbGxUb3AgPSBzaWRlYmFyU2Nyb2xsLnNjcm9sbFRvcDsKICAgICAgY29uc3QgYm90dG9tVmlzaWJsZSA9IG9mZnNldEJvdHRvbSA8PSB2aWV3UG9ydEhlaWdodCArIHNjcm9sbFRvcDsKICAgICAgaWYgKCFib3R0b21WaXNpYmxlKSB7CiAgICAgICAgc2lkZWJhclNjcm9sbC5zY3JvbGxUb3AgPSBvZmZzZXRCb3R0b20gKyA1IC0gdmlld1BvcnRIZWlnaHQ7CiAgICAgIH0KICAgICAgY29uc3QgdG9wVmlzaWJsZSA9IG9mZnNldFRvcCA+PSBzY3JvbGxUb3A7CiAgICAgIGlmICghdG9wVmlzaWJsZSkgewogICAgICAgIHNpZGViYXJTY3JvbGwuc2Nyb2xsVG9wID0gb2Zmc2V0VG9wIC0gNTsKICAgICAgfQogICAgfTsKICAgIGNvbnN0IHRvZ2dsZUdyb3VwID0gaW5kZXggPT4gewogICAgICBpbnN0YW5jZS5vcGVuR3JvdXBJbmRleCA9IGluZGV4ID09PSBpbnN0YW5jZS5vcGVuR3JvdXBJbmRleCA/IC0xIDogaW5kZXg7CiAgICB9OwogICAgY29uc3QgaXNBY3RpdmUgPSBwYWdlID0+IHsKICAgICAgcmV0dXJuIGlzQWN0aXZlKGluc3RhbmNlLiRyb3V0ZSwgcGFnZS5yZWd1bGFyUGF0aCk7CiAgICB9OwogICAgcmVmcmVzaEluZGV4KCk7CiAgICBvbk1vdW50ZWQoKCkgPT4gewogICAgICBhY3RpdmF0aW9uTGluaygpOwogICAgICBpc0luVmlld1BvcnRPZk9uZSgpOwogICAgfSk7CiAgICBvblVwZGF0ZWQoKCkgPT4gaXNJblZpZXdQb3J0T2ZPbmUoKSk7CiAgICByZXR1cm4gewogICAgICBvcGVuR3JvdXBJbmRleCwKICAgICAgcmVmcmVzaEluZGV4LAogICAgICB0b2dnbGVHcm91cCwKICAgICAgaXNBY3RpdmUKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgJyRyb3V0ZScoKSB7CiAgICAgIHRoaXMucmVmcmVzaEluZGV4KCk7CiAgICB9CiAgfQp9KTsKZnVuY3Rpb24gcmVzb2x2ZU9wZW5Hcm91cEluZGV4KHJvdXRlLCBpdGVtcykgewogIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHsKICAgIGNvbnN0IGl0ZW0gPSBpdGVtc1tpXTsKICAgIGlmIChpdGVtLnR5cGUgPT09ICdncm91cCcgJiYgaXRlbS5jaGlsZHJlbi5zb21lKGMgPT4gYy50eXBlID09PSAncGFnZScgJiYgaXNBY3RpdmUocm91dGUsIGMucGF0aCkpKSB7CiAgICAgIHJldHVybiBpOwogICAgfQogIH0KICByZXR1cm4gLTE7Cn0="},{"version":3,"mappings":"AAwBA;AACA;AACA;AACA;AACA;AAEA;EACAA;EAEAC;IAAAC;IAAAC;EAAA;EAEAC,QACA,SACA;EAAA;EACA;EAAA,CACA;;EAEAC;IACA;IAEA;MAAAC;IAAA;IAEA;IAEA;MACA,oCACAC,iBACAD,YACA;MACA;QACAE;MACA;IACA;IAEA;MACA;MACA,qFACAC;MACA;MACAC;QACAC;MACA;IACA;IAEA;MACA;MACA;MACA;MACA;MACA;QACA;UACAC;UACAC;UACA;QACA;MACA;IACA;IAEA;MACA;MACA;MACA;QACAC;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;QACAC;MACA;MACA;MACA;QACAA;MACA;IACA;IAEA;MACAR;IACA;IAEA;MACA;IACA;IAEAS;IAEAC;MACAC;MACAC;IACA;IAEAC;IAEA;MAAAZ;MAAAQ;MAAAK;MAAAC;IAAA;EACA;EAEAC;IACA;MACA;IACA;EACA;AACA;AAEA;EACA;IACA;IACA;MACA;IACA;EACA;EACA;AACA","names":["name","components","SidebarGroup","SidebarLink","props","setup","items","instance","openGroupIndex","filter","setTimeout","window","subtitles","activationAnchor","el","sidebarScroll","refreshIndex","onMounted","activationLink","isInViewPortOfOne","onUpdated","toggleGroup","isActive","watch"],"sourceRoot":"node_modules/vuepress-theme-reco/components","sources":["SidebarLinks.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"sidebar-links\"\n    v-if=\"items.length\"\n  >\n    <li v-for=\"(item, i) in items\" :key=\"i\">\n      <SidebarGroup\n        v-if=\"item.type === 'group'\"\n        :item=\"item\"\n        :open=\"i === openGroupIndex\"\n        :collapsable=\"item.collapsable || item.collapsible\"\n        :depth=\"depth\"\n        @toggle=\"toggleGroup(i)\"\n      />\n      <SidebarLink\n        v-else\n        :sidebarDepth=\"sidebarDepth\"\n        :item=\"item\"\n      />\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { defineComponent, ref, toRefs, onUpdated, onMounted } from 'vue'\nimport SidebarGroup from '@theme/components/SidebarGroup'\nimport SidebarLink from '@theme/components/SidebarLink'\nimport { isActive } from '@theme/helpers/utils'\nimport { useInstance } from '@theme/helpers/composable'\n\nexport default defineComponent({\n  name: 'SidebarLinks',\n\n  components: { SidebarGroup, SidebarLink },\n\n  props: [\n    'items',\n    'depth', // depth of current sidebar links\n    'sidebarDepth' // depth of headers to be extracted\n  ],\n\n  setup (props, ctx) {\n    const instance = useInstance()\n\n    const { items } = toRefs(props)\n\n    const openGroupIndex = ref(0)\n\n    const refreshIndex = () => {\n      const index = resolveOpenGroupIndex(\n        instance.$route,\n        items.value\n      )\n      if (index > -1) {\n        openGroupIndex.value = index\n      }\n    }\n\n    const activationAnchor = () => {\n      // eslint-disable-next-line no-undef\n      const anchors = [].slice.call(document.querySelectorAll(AHL_HEADER_ANCHOR_SELECTOR))\n        .filter(anchor => decodeURIComponent(instance.$route.fullPath).indexOf(decodeURIComponent(anchor.hash)) != -1)\n      if (anchors == null || anchors.length < 1 || anchors[0].offsetTop == undefined) return\n      setTimeout(function () {\n        window.scrollTo(0, anchors[0].offsetTop + 160)\n      }, 100)\n    }\n\n    const activationLink = () => {\n      const subtitleName = decodeURIComponent(instance.$route.fullPath)\n      if (!subtitleName || subtitleName == '') return\n      // eslint-disable-next-line no-undef\n      const subtitles = [].slice.call(document.querySelectorAll(AHL_SIDEBAR_LINK_SELECTOR))\n      for (let i = 0; i < subtitles.length; i++) {\n        if (decodeURIComponent(subtitles[i].getAttribute('href')).indexOf(subtitleName) != -1) {\n          subtitles[i].click()\n          activationAnchor()\n          return\n        }\n      }\n    }\n\n    const isInViewPortOfOne = () => {\n      const sidebarScroll = document.getElementsByClassName('sidebar')[0]\n      let el = document.getElementsByClassName('active sidebar-link')[1]\n      if (el == null || el == undefined || el.offsetTop == undefined) {\n        el = document.getElementsByClassName('active sidebar-link')[0]\n      }\n      if (el == null || el == undefined || el.offsetTop == undefined) return\n\n      const viewPortHeight = sidebarScroll.clientHeight || window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n      const offsetTop = el.offsetTop\n      const offsetBottom = el.offsetTop + el.offsetHeight\n      const scrollTop = sidebarScroll.scrollTop\n      const bottomVisible = (offsetBottom <= viewPortHeight + scrollTop)\n      if (!bottomVisible) {\n        sidebarScroll.scrollTop = (offsetBottom + 5 - viewPortHeight)\n      }\n      const topVisible = (offsetTop >= scrollTop)\n      if (!topVisible) {\n        sidebarScroll.scrollTop = (offsetTop - 5)\n      }\n    }\n\n    const toggleGroup = (index) => {\n      instance.openGroupIndex = index === instance.openGroupIndex ? -1 : index\n    }\n\n    const isActive = (page) => {\n      return isActive(instance.$route, page.regularPath)\n    }\n\n    refreshIndex()\n\n    onMounted(() => {\n      activationLink()\n      isInViewPortOfOne()\n    })\n\n    onUpdated(() => isInViewPortOfOne())\n\n    return { openGroupIndex, refreshIndex, toggleGroup, isActive }\n  },\n\n  watch: {\n    '$route' () {\n      this.refreshIndex()\n    }\n  }\n})\n\nfunction resolveOpenGroupIndex (route, items) {\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i]\n    if (item.type === 'group' && item.children.some(c => c.type === 'page' && isActive(route, c.path))) {\n      return i\n    }\n  }\n  return -1\n}\n</script>\n"]}]}